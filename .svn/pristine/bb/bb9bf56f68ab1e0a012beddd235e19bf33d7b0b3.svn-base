package ua.nure.dudka.practice6.part2;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;

public class Part2 {

    public static long removeByIndex(List<?> list, int k) {
        int index = k - 1;
        long execStart = System.currentTimeMillis();
        while (list.size() != 1) {
            for (; index < list.size(); index += k - 1) {
                list.remove(index);
                if (list.size() == 1) {
                    break;
                }
            }
            index -= list.size();
        }
        long execEnd = System.currentTimeMillis();

        return execEnd - execStart;
    }

    public static long removeByIterator(List<?> list, int k) {
        //TODO Call iter.next() k times and then call iter.remove()
        return 0;
    }

    public static void main(String[] args) {
        List<Integer> arrayList = new ArrayList<>();
        List<Integer> linkedList = new LinkedList<>();
        Random random = new Random();
        random.setSeed(System.currentTimeMillis());

        for (int i = 0; i < 10000; i++) {
            Integer integer = random.nextInt() % 256;
            arrayList.add(integer);
            linkedList.add(integer);
        }
        System.out.printf("ArrayList#Index: %d ms\n" ,Part2.removeByIndex(arrayList, 4));
        System.out.printf("LinkedList#Index: %d ms\n" ,Part2.removeByIndex(linkedList, 4));
    }

}
